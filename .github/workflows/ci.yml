name: CI

permissions:
  contents: read

on:
  pull_request:
  push:
    branches:
      - main
      - dev
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  deny:
    uses: taiki-e/workflows/.github/workflows/deny.yml@main
  msrv:
    uses: taiki-e/workflows/.github/workflows/msrv.yml@main
    with:
      event_name: ${{ github.event_name }}
  tidy:
    uses: taiki-e/workflows/.github/workflows/tidy.yml@main

  test:
    strategy:
      fail-fast: false
      matrix:
        include:
          # TODO: nightly-2023-04-27 (https://github.com/rust-lang/rust/pull/97368)
          # and nightly-2023-05-03 (https://github.com/rust-lang/rust/pull/111042)
          # fixed bugs in report generation, so the latest report is not the
          # same as the old report.
          # - rust: '1.60'
          # - rust: stable
          # - rust: beta
          - rust: nightly
          - rust: nightly
            os: macos-11
          - rust: nightly
            os: windows-2019
    runs-on: ${{ matrix.os || 'ubuntu-20.04' }}
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Install Rust
        run: rustup toolchain add ${{ matrix.rust }} --no-self-update --component llvm-tools-preview && rustup default ${{ matrix.rust }}
      - run: rustup toolchain add nightly --no-self-update
      - uses: taiki-e/install-action@cargo-hack
      - uses: taiki-e/install-action@cargo-minimal-versions
      - uses: taiki-e/install-action@nextest
      - run: echo "RUSTFLAGS=${RUSTFLAGS} -C target-feature=+crt-static" >>"${GITHUB_ENV}"
        if: startsWith(matrix.os, 'windows')
      - run: cargo test --workspace --all-features
      # TODO: move this test to tests/test.rs
      - run: cargo install --path . --debug
      - run: |
          set -euxo pipefail
          cargo llvm-cov nextest --text
          cargo llvm-cov nextest --text --profile default --cargo-profile dev
          cargo llvm-cov nextest --text --profile ci
        working-directory: tests/fixtures/crates/bin_crate
      - run: |
          set -euxo pipefail
          git clone https://github.com/taiki-e/easytime.git
          cd easytime
          cargo llvm-cov test --doctests --text
        if: startsWith(matrix.rust, 'nightly')
      - run: cargo minimal-versions build --workspace --all-features --ignore-private

  build-nextest-artifacts:
    name: Build nextest artifacts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - name: Build and archive tests
        run: |
          set -euxo pipefail
          cargo nextest archive --archive-file nextest-artifacts.tar.zst
          ls -la target
          tar -tvf nextest-artifacts.tar.zst
        working-directory: tests/fixtures/crates/bin_crate
      - name: Upload archive to workflow
        uses: actions/upload-artifact@v3
        with:
          name: nextest-artifacts
          path: tests/fixtures/crates/bin_crate/nextest-artifacts.tar.zst

  llvm-cov-nextest-partitioned:
    name: Run tests and coverage instrumentation with partitioning
    runs-on: ubuntu-latest
    needs: build-nextest-artifacts
    strategy:
      matrix:
        partition: [1, 2]
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: llvm-tools-preview
      - name: Install nextest
        uses: taiki-e/install-action@nextest
      - name: Install llvm-cov
        # run: cargo install --path . --debug
        run: cargo install -f --git https://github.com/TriplEight/cargo-llvm-cov cargo-llvm-cov --rev a9ada936f2c3da5d759145ebe6a5b9a38593f104
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: nextest-artifacts
      - name: Run tests
        run: |
          set -euxo pipefail
          export CARGO_TARGET_DIR=target
          mkdir -p target
          cargo llvm-cov nextest --archive-file nextest-artifacts.tar.zst --partition count:${{ matrix.partition }}/2
          cargo llvm-cov --text
          tar czf llvm-cov-artifacts-${{ matrix.partition }}.tar.gz target/llvm-cov-target
        working-directory: tests/fixtures/crates/bin_crate
      - name: Upload archive to workflow
        uses: actions/upload-artifact@v3
        with:
          name: llvm-cov-artifacts
          path: |
            tests/fixtures/crates/bin_crate/llvm-cov-artifacts-1.tar.gz
            tests/fixtures/crates/bin_crate/llvm-cov-artifacts-2.tar.gz

  report-from-partitions:
    name: Collect artifacts from partitions and generate the report
    runs-on: ubuntu-latest
    needs: llvm-cov-nextest-partitioned
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
          components: llvm-tools-preview
      - name: Install llvm-cov
        run: cargo install --path . --debug
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: llvm-cov-artifacts
      - name: Run tests
        run: |
          set -euxo pipefail
          mkdir -p target
          for i in {1..2}; do tar xzf llvm-cov-artifacts-$i.tar.gz -C ./target; done
          cargo llvm-cov report --text
        working-directory: tests/fixtures/crates/bin_crate

  build:
    name: build (${{ matrix.target }})
    env:
      cargo: cargo
    strategy:
      fail-fast: false
      matrix:
        # When updating this list, the reminder to update the target list in release.yml.
        include:
          - target: aarch64-unknown-linux-gnu
          - target: aarch64-unknown-linux-musl
          - target: aarch64-apple-darwin
            os: macos-11
          - target: x86_64-unknown-linux-gnu
          - target: x86_64-unknown-linux-musl
          - target: x86_64-apple-darwin
            os: macos-11
          - target: x86_64-pc-windows-msvc
            os: windows-2019
    runs-on: ${{ matrix.os || 'ubuntu-20.04' }}
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v3
        with:
          persist-credentials: false
      - name: Install Rust
        run: rustup update stable --no-self-update
      - run: rustup target add ${{ matrix.target }}
      - uses: taiki-e/setup-cross-toolchain-action@v1
        with:
          target: ${{ matrix.target }}
        if: (matrix.os == '' || startsWith(matrix.os, 'ubuntu')) && !contains(matrix.target, '-musl')
      - uses: taiki-e/install-action@cross
        if: contains(matrix.target, '-musl')
      - run: echo "RUSTFLAGS=${RUSTFLAGS} -C target-feature=+crt-static" >>"${GITHUB_ENV}"
        if: endsWith(matrix.target, 'windows-msvc')
      - run: echo "cargo=cross" >>"${GITHUB_ENV}"
        if: contains(matrix.target, '-musl')
      - run: $cargo build --target ${{ matrix.target }}
      - run: $cargo build --target ${{ matrix.target }} --release
      # For debugging
      - uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}
          path: target/${{ matrix.target }}/release/cargo-llvm-cov*
